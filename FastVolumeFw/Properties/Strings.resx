<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CloseTheApp" xml:space="preserve">
    <value>Close the app</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="IsAppDisabledInFullScreenModeDescription" xml:space="preserve">
    <value>If the option is enabled and you are in full screen mode, the volume control will not be shown.</value>
  </data>
  <data name="IsAppDisabledInFullScreenModeLabel" xml:space="preserve">
    <value>Disable in full screen mode</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language:</value>
  </data>
  <data name="LanguageChangeMessage" xml:space="preserve">
    <value>You have changed the language. The application will be restarted.</value>
  </data>
  <data name="LanguageChangeTitle" xml:space="preserve">
    <value>Language change</value>
  </data>
  <data name="LanguageLabelDescription" xml:space="preserve">
    <value>App language. Requires app restart.</value>
  </data>
  <data name="MiddleMouseButtonActionDescription" xml:space="preserve">
    <value>The action that occurs when the middle mouse button is pressed.</value>
  </data>
  <data name="MiddleMouseButtonActionLabel" xml:space="preserve">
    <value>Middle mouse button action:</value>
  </data>
  <data name="MixerListLabel" xml:space="preserve">
    <value>List of programs in the volume mixer</value>
  </data>
  <data name="MmbaMute" xml:space="preserve">
    <value>Mute</value>
  </data>
  <data name="MmbaNone" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="MmbaOpenSettings" xml:space="preserve">
    <value>Open app settings</value>
  </data>
  <data name="MmbaPlayPause" xml:space="preserve">
    <value>Play or pause</value>
  </data>
  <data name="MouseWheelVolumeChangeStepDescription" xml:space="preserve">
    <value>Volume change step when adjusting with the mouse wheel. Range: 1-10.</value>
  </data>
  <data name="MouseWheelVolumeChangeStepLabel" xml:space="preserve">
    <value>Mouse wheel volume change step:</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="PlaySoundAfterVolumeChangeDescription" xml:space="preserve">
    <value>Play standard system sound when you release the volume control.</value>
  </data>
  <data name="PlaySoundAfterVolumeChangeLabel" xml:space="preserve">
    <value>Play sound when volume change completes</value>
  </data>
  <data name="RestoreDefaults" xml:space="preserve">
    <value>Restore defaults</value>
  </data>
  <data name="RestoreDefaultsMessage" xml:space="preserve">
    <value>You are about to restore default application settings.</value>
  </data>
  <data name="RestoreDefaultsTitle" xml:space="preserve">
    <value>Restore defaults</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="ShowPlaybackButtonsDescription" xml:space="preserve">
    <value>Display playback control buttons on the volume control window.</value>
  </data>
  <data name="ShowPlaybackButtonsLabel" xml:space="preserve">
    <value>Show playback control buttons</value>
  </data>
  <data name="UnmuteWhileChangingVolumeDescription" xml:space="preserve">
    <value>If the parameter is enabled and the sound is muted, it will be unmuted when the sound level is changed.</value>
  </data>
  <data name="UnmuteWhileChangingVolumeLabel" xml:space="preserve">
    <value>Always unmute while changing volume</value>
  </data>
  <data name="Unstable" xml:space="preserve">
    <value>Unstable</value>
  </data>
  <data name="VolumeControlWithMouseWheelDescription" xml:space="preserve">
    <value>When you move the mouse wheel within the application window, the volume changes.</value>
  </data>
  <data name="VolumeControlWithMouseWheelLabel" xml:space="preserve">
    <value>Enable volume control with the mouse wheel</value>
  </data>
  <data name="WindowRightMarginDescription" xml:space="preserve">
    <value>Offset of the main window from the right edge. Range: 0-100.</value>
  </data>
  <data name="WindowRightMarginLabel" xml:space="preserve">
    <value>Window right margin:</value>
  </data>
</root>